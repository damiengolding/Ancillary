strict digraph my_library{
	graph [
		rankdir="TB"
		beautify=true;
		compound=true;
		labelloc="t";
		label="My library";
		fontname="JetBrains Mono";
		fontsize=18;
		ranksep=0.5;
	]
	node [ fontname="JetBrains Mono", fontsize=14, style=rounded, shape=record, nojustify=true ];
	edge  [ fontname="JetBrains Mono", fontsize=10, style=dashed ];

	// Nodes
		
	// Clusters
	subgraph cluster_first{
		style="invis"
		enum [label=<{ <b>&lt;&lt;enum&gt;&gt; MyEnum</b>|enum MyEnum &#123;<br align="left" />UNDEFINED,<br align="left" />FIRST,<br align="left" />SECOND,<br align="left" />NUM_ITEMS&#125;&#59;<br align="left" /> }>];
		struct [label="<<struct>> MyStruct\n-------------------\lcenter\nleft\lright\r", shape="component"];
	}
	
	subgraph cluster_data_manip{
		label="GoldingsGym::MyProject::DataManip"
		//rank="same"
		slr  [ label=<{ <b>SimpleLinearRegression</b>|+properties<br align="left"/>. . .<br align="left" />|+members<br align="left"/>. . .<br align="left" />}> ];
		mlr  [ label=<{ <b>MultipleLinearRegression</b>|+properties<br align="left" />. . .<br align="left" />|+members<br align="left" />. . .<br align="left" />}> ];
		tsa  [ label=<{ <b>TimeSeriesAnalysis</b>|+properties<br align="left" />. . .<br align="left" />|+members<br align="left" />. . .<br align="left" />}> ];
		
		slr->mlr [style="invis"]
		mlr->tsa [style="invis"]
	}
	
	subgraph cluster_data_io{
		label="GoldingsGym::MyProject::DataIO"
		interface_01 [ label=<{ <b>&lt;&lt;interface&gt;&gt; AbstractInputOutput</b>|+virtual qint64 Read(const QString&amp; file) = 0&#59;<br align="left"/>+virtual qint64 Write(const QString&amp; file) = 0&#59;<br align="left"/> }>];
		tsv [ label=<{ <b>TsvInputOutput</b>|+qint64 Read(const QString&amp; file)&#59;<br align="left" />+qint64 Write(const QString&amp; file)&#59;<br align="left"/> }> ];
		database  [ label=<{ <b>DatabaseInputOutput</b>|+qint64 Read(const QString&amp; file)&#59;<br align="left" />+qint64 Write(const QString&amp; file)&#59;<br align="left"/> }> ];			
		interface_01->tsv[arrowhead="none" arrowtail="normal" dir="both"];
		interface_01->database[arrowhead="none" arrowtail="normal" dir="both"];
	}

	// Edges
	tsa->interface_01 [ ltail="cluster_data_manip" lhead="cluster_data_io" arrowhead="normal" arrowtail="normal" dir="both" style="invis" ]
	enum->slr [ ltail="cluster_first" lhead="cluster_data_manip"; style="invis" ]
	struct->slr [ ltail="cluster_first" lhead="cluster_data_manip"; style="invis" ]
}